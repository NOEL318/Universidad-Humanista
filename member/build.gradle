plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.intranet'
version = '0.0.1-SNAPSHOT'



java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
ext {
  set('springCloudVersion', "2025.0.0")
}
dependencies {
	// Spring
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// MapStruct
	implementation 'org.mapstruct:mapstruct:1.6.3'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
	// Database
	runtimeOnly 'com.mysql:mysql-connector-j'
	// Micrometer
	runtimeOnly 'io.micrometer:micrometer-registry-graphite'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	// Dev
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// Cloud
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
	//Logger
	 implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
	//Eureka client
	  implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

tasks.named('test') {
	useJUnitPlatform()
}
